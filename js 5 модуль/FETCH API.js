API // интерфейс какого-либо програмного обезпечения либо приложение(айпи) набор данных и возможностей которые предостовляет нам какое-то готовое решение

//Fetch API

fetch() // прописуется так

// fetch('ссылка')
//     .then(response => response.json());
//     .then(json => console.log(json));

// fetch с url без указаний доп параметров, это классический запрос на сервер

fetch('ссылка нашего сервера с котого берем или атправляем данные', {
    method: 'POST',
    body: Json.stringify({name: 'Alex'}),
    headers: {
        'Content-type': 'application/json'
    }
})
// намного прощем чем работа с XLMHTT
// особености фетча  - промис который запускается через фетч не перейдет с состояния reject(отколонено) из за ответа http который считается ошибкой -  404 500 501 502 он всеровно выполнется нормально, поменяется только статус на значение false

// итоги fetch - технология на замену XLMHTT, очень простой и укороченый
// самое главное понять что fetch работает на промисах мы дальше можем делать цепочку вызовов then
