'use strict';

const arr = [1, 2, 3, 6, 8];

arr.pop(); // метод который удаляет последние значение из массива 

arr.push(10); // метод добовляет любое значение в конец массив

// также есть методы unshift и shift которые выполняют туже задачу но в начале массива и проблема в 
// том что при добовление нового значение оно приобретает индекс того значение которое стояло впереди
// до изменений и по этому нужно менять индекст каждого значение тоже самое если м убираем первое значение
// и на его место становиться последущий и у него тоже должен уже быть другой индекс и минять их не удобно и
// долго по этому их не часто используют

console.log(arr)

for(let i = 0; i < arr.length; i++){ // перечесляем все элементы в массиве
    console.log(arr[i])
};

for(let value of arr){  // for in которй мыы разбирали для обэктов, для масивов нужен for of
    console.log(value)  // for of работает с массиво подобнми типами данныых 
}

// перечисление можно делать как и при помощи простого цыкла так и for of

//сам продвинутй и частоиспользуемй метод такой же как for of

arr.forEach(function(item,a,b){
    console.log(`${a}: ${item} внутри массива ${b}`)
});

// этот метод как мы говорили тоже перечисляет элементы массива и м можем четко его натсроить для этого
// и первый аргумент внутри этой функции это элемент которй мы перебираем второй это номер по порядку этого элемента
// и третий это сам массив которй мы перебираем, после внутри мы уже указем что выполняеться

//когда же можно использовать forEach и обчнй for of цикл, обычно forEach используют часто но у
// for of есть приймущество использовать brake continue

const str = prompt("","");
const products = str.split(", ")

console.log(products)

split(", ") // нужен что бы сформировать строку в массив, в данном примере то что ввел наш клиент это
// все переводиться в строчнй элемент то после создаем новую переменную где указуеем с какой переменной будем
// работать а после split() а внутри разделитель например их бдует разделять запятая

console.log(products.join("; ")) // это обратный способ, из массива сделать строку для пользователя

products.sort() // такой метод просто сортирует по порядку но только строки а с црами будет проблема но
// этого можно исбежать 

function compareNum(a,b){
    return a -b;
}

// с таким методом у нас уже получиться отсортировать числа правлеьно

                                    //Псевдомассивы
// мы будем получать псевдомассивы при работе на страницы, они выглядят также как массивы
// но в них нету методов вообще, это просто структура которая хранит данные по порядку

