// Простые Типы:                          Объекты
// числа  1, 2, 3;                        спец.объекты:             Обычные Объекты
// строки 'string' 'name';                Массивы[];
// Логические типы (boolean)              функции function;       
// true/false;                            Объект даты;
// null;                                  Регулярное выражение;
// undefined;                             Ошибки.
// symbol;
// biglnt.

//Прсотые типы
// 1)числа - что бы поместить число в переменую мы можем просто написать числовой тип данных от 1 до милиона
//также числа могут быть как целыми так и дробными (1.2) и используеться точка а не запятая
//кроме этого существует еще специальные числовые значения которые относяться к дамнному типу
//это 'Infinity' который можно получить при деление на ноль к примеру
console.log(4/0);
//и 'NaN' который можно получить если мы  проведем какую-то операцию которая не подлежит математической логике
// к примеру

// 2) Строки - обязательным отребутом которым будут всегда являться кавычки, любая строчка пишеться в них("" '')
//также есть касые кавычки которые тоже подходят (``)
//также строки могут содеражть в себе любое количество текста, также стоки могут содеражть в себе числа
// к примеру
let number = `width of car, 34 3.4 and stuff`;

// 3)Логические Тип Данных или (bollean) и это либо - да 'True', либо нет - 'false'
// к примеру
const bool = false;
//дальше более философские тип данных 'null' и 'undefined'
//'null' выводиться тогда когда чего-то просто не существует в коде
//к примеру выведем того чего нету 
console.log(abcdf); //такой переменной нету и код выдаст нам NuN
//в отличие от тего 'undefined' это то когда что существует но у него нет абсолютно ни какого значения
// к примеру если мы зададим переменную без значения и попытаемся выести эту переменную то код выдаст нам
//undefined пример
let asdf;

console.log(asdf) // в переменной ничего нету и мы получим 'undefined'

// Объекты - это колекцыя данных которая используеться для хранения абсолютно любых данных еще называеться
//комплекстным ведь в нем могут содержаться все те типы преведины выше для того что бы создавать объекты
//воспользуемся синтаксисом фигурных скобок
// к примеру 
const obj = {    //это и есть объект и вот он в себе может содержать данные которые будут уже будут называться
    name:'Kris',    // свойствами объекта и также какие-то действия - называються методы
    age: 16,            // к примеру добавим в объект 'name' после которого знак присваивания двоиточие 
    isMaried:false         // и обязательно после значения ставить запятую
}                             // если мы хотим обратиться  к кокому-то из этих свойт вывсети на икран
                              //то мы можем это сделать через точку после названия переменной к примеру
console.log(mbj.name)         // есть еще один способо обратиться через скобки '[]' но
                              // обязательно в скобка нужно ставить кавычки, 
console.log(mbg['name'])
// таже массивы '[]' используються что бы создать какойто список который идет по порядку и храниться на сервере
//к примеру
let arr = ['plump.pmg', 9, {}, [], 'orrange.jpg', 7,'apple.bmp'];
// обязательно названия нужно писать в кавычках (если это строка) и после каждого значение ставить запятую
// но в конце точка с запятой, также мы можем поместить числа или любой пустой масссив
// что бы обратиться к какомуто елементу в этом массиве должны указать переменную [] и номер того елемента
// все номерации в програмирование начинаються не с 1 а с нуля 0
console.log(arr[0]) // мы обращаемся в самому первому елементу 'plumb.pmg' 


